name: Build and Release Workflow

on:
  push:
    tags:
      - '*'  # 仅在推送标签时触发
  workflow_dispatch:
  
jobs:
  # 删除 macOS 相关逻辑，仅保留 Linux 和 Windows
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4  # 更新 checkout 至 v4
      - name: Set up Python
        uses: actions/setup-python@v5  # 更新 setup-python 至 v5
        with:
          python-version: '3.10'
      - name: Set up Node
        uses: actions/setup-node@v4  # 更新 setup-node 至 v4
        with:
          node-version: '16'
      - name: Install uv
        uses: astral-sh/setup-uv@v6  # 使用官方 setup-uv 安装 uv
      - name: Clean dist (Linux)
        run: rm -rf dist  # Linux 下删除 dist 目录
      - name: Install dependencies
        run: uv sync --locked
      - name: Build package
        run: uv build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1  # 创建 GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # 使用推送的标签名
          release_name: Release ${{ github.ref_name }}
          body: Automated release for ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1  # 上传 Linux 构建产物
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/
          asset_name: mypkg-${{ github.ref_name }}-linux.whl  # Linux 二进制包
          asset_content_type: application/octet-stream

  build-windows:
    needs: build-linux  # Windows 任务依赖 Linux 任务以获取 Release 上传地址
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4  # 更新 checkout 至 v4
      - name: Set up Python
        uses: actions/setup-python@v5  # 更新 setup-python 至 v5
        with:
          python-version: '3.10'
      - name: Set up Node
        uses: actions/setup-node@v4  # 更新 setup-node 至 v4
        with:
          node-version: '16'
      - name: Install uv
        uses: astral-sh/setup-uv@v6  # 安装 uv
      - name: Clean dist (Windows)
        run: Remove-Item -Recurse -Force dist  # Windows 下删除 dist 目录
        shell: powershell
      - name: Install dependencies
        run: uv sync --locked
      - name: Build package
        run: uv build
      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1  # 上传 Windows 构建产物
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-linux.outputs.upload_url }}  # 使用 Linux 任务的 Release 上传 URL
          asset_path: dist/
          asset_name: mypkg-${{ github.ref_name }}-windows.whl  # Windows 二进制包
          asset_content_type: application/octet-stream
